<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Virtual Coach AI – Upload</title>
  <link rel="stylesheet" href="style.css" />
  <style>
    main { max-width: 840px; margin: 40px auto; padding: 16px; background: rgba(0,0,0,.35); border-radius: 12px; }
    .row { display:flex; gap:10px; align-items:center; flex-wrap:wrap; }
    input[type="file"] { padding:10px; }
    button { padding:10px 14px; border-radius:10px; border:1px solid rgba(255,255,255,.15); background:#0a5f37; color:#fff; cursor:pointer; }
    #status { margin-top:10px; font-weight:600; }
    video { width:100%; max-height:400px; margin-top:16px; display:none; }
  </style>
</head>
<body>
  <header>
    <nav>
      <ul>
        <li><a href="index.html">Home</a></li>
        <li><a href="about.html">About</a></li>
        <li><a href="coming-soon.html">Coming Soon</a></li>
        <li><a href="contact.html">Contact</a></li>
      </ul>
    </nav>
  </header>

  <main>
    <h1>Upload Your Swing</h1>
    <div class="row">
      <input type="file" id="fileInput" accept="video/*" />
      <button id="uploadBtn">Upload Video</button>
    </div>
    <div id="status"></div>
    <video id="preview" controls></video>
  </main>

  <script>
    const fileInput = document.getElementById('fileInput');
    const statusDiv = document.getElementById('status');
    const preview = document.getElementById('preview');
    const uploadBtn = document.getElementById('uploadBtn');

    fileInput.addEventListener('change', () => {
      const f = fileInput.files[0];
      if (!f) return;
      const url = URL.createObjectURL(f);
      preview.src = url;
      preview.style.display = 'block';
    });

    uploadBtn.addEventListener('click', async () => {
      const file = fileInput.files[0];
      if (!file) { statusDiv.textContent = "Please select a video file."; return; }

      statusDiv.textContent = "Requesting upload link…";

      // Tiny JSON to Vercel (safe)
      const presignRes = await fetch('/api/s3-presign', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({ filename: file.name, contentType: file.type || 'video/quicktime' })
      });

      if (!presignRes.ok) { statusDiv.textContent = "Failed to get upload URL."; return; }
      const { url, fields, key, publicUrl } = await presignRes.json();

      statusDiv.textContent = "Uploading to cloud…";

      // Big file goes DIRECT to S3 (not your domain)
      const formData = new FormData();
      Object.entries(fields).forEach(([k,v]) => formData.append(k, v));
      formData.append('file', file);

      const s3Res = await fetch(url, { method: 'POST', body: formData });
      if (!s3Res.ok) {
        const txt = await s3Res.text().catch(()=> '');
        console.error('S3 error:', s3Res.status, txt);
        statusDiv.textContent = "Upload failed. Please try again.";
        return;
      }

      sessionStorage.setItem('uploadedVideoUrl', publicUrl);
      statusDiv.textContent = "Upload complete. Generating report…";
      window.location.href = "report.html";
    });
  </script>
</body>
</html>
