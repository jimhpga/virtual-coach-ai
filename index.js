// vca-s3-report-writer (Node.js 20.x, CommonJS)
const {
  S3Client,
  HeadObjectCommand,
  PutObjectCommand
} = require("@aws-sdk/client-s3");

const REGION = process.env.AWS_REGION || "us-west-2";
const s3 = new S3Client({ region: REGION });

const UPLOAD_PREFIX = "uploads/"; // keep in sync with your site

function baseKey(key) {
  return String(key || "").replace(/\.[a-z0-9]+$/i, "");
}

exports.handler = async (event) => {
  const records = event?.Records || [];
  for (const rec of records) {
    try {
      const bucket = rec?.s3?.bucket?.name;
      let key = rec?.s3?.object?.key;
      if (!bucket || !key) continue;

      key = decodeURIComponent(key.replace(/\+/g, " "));
      if (!key.startsWith(UPLOAD_PREFIX)) continue;
      if (!/\.(mp4|mov|m4v|webm|avi|mkv)$/i.test(key)) continue;

      const reportKey = `${baseKey(key)}.report.json`;

      // Skip if report already exists
      try {
        await s3.send(new HeadObjectCommand({ Bucket: bucket, Key: reportKey }));
        continue;
      } catch {}

      const report = {
        status: "ready",
        meta: { bucket, key, createdAt: new Date().toISOString() },
        metrics: { shoulder_turn_deg: 90, swing_path_up_deg: 2, club_speed_mph: 95 },
        notes: "Auto-generated by vca-s3-report-writer."
      };

      await s3.send(new PutObjectCommand({
        Bucket: bucket,
        Key: reportKey,
        Body: JSON.stringify(report, null, 2),
        ContentType: "application/json"
      }));
    } catch (e) {
      console.error("Worker error:", e);
    }
  }
  return { ok: true };
};
